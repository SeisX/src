from rsf.proj import *

# Download Viking Graben stack
Fetch('stack.HH','viking')

# Convert from XDR to native format, remove high-wavenumber noise
Flow('viking','stack.HH',
     '''
     dd form=native | transp | bandpass fhi=35 | transp | 
     window max1=4
     ''')

# Display
Plot('viking','grey title="Viking Graben Stack" ')
Result('viking','Overlay')

# 2D cosine transform
Flow('cosft','viking',
     '''
     cosft sign1=1 sign2=1 | window max1=90 | 
     mutter v0=0.5 half=n | put label2=Wavenumber
     ''')
Result('cosft','grey title="Cosine Transform" pclip=95')

# Stolt migration
Flow('map2','cosft','math output="sqrt(x1*x1+x2*x2)" ')
Result('map2',
       '''
       grey color=x allpos=y scalebar=y 
       title="Stolt Map" barlabel=Frequency barunit=Hz
       ''')

Flow('cosft2','cosft map2','iwarp warp=${SOURCES[1]} inv=n',
     split=[2,'omp'])
Result('cosft2','grey title="Cosine Transform Warped" pclip=95')

Flow('mig2','cosft2','pad n1=1001 | cosft sign1=-1 sign2=-1')
Result('mig2',
       'grey title="Stolt Migration with Velocity of 2 km/s" ')

# Ensemble of Stolt migrations with different velocities
Flow('spray','cosft',
     'spray axis=3 n=120 o=1.5 d=0.02 label=Velocity unit=km/s')
Flow('map','spray','math output="sqrt(x1*x1+0.25*x3*x3*x2*x2)" ')
Result('map',
       '''
       byte gainpanel=all allpos=y | 
       grey3 title="Stolt Ensemble Map" 
       frame1=400 frame2=1000 frame3=50 color=x
       ''')

Flow('mig','spray map',
     '''
     iwarp warp=${SOURCES[1]} inv=n | pad n1=1001 | 
     cosft sign1=-1 sign2=-1
     ''',split=[3,'omp'])
Flow('migt','mig','transp plane=23 memsize=5000')
Plot('mig','grey title="Ensemble of Stolt Migrations" ',view=1)

# Migration velocity increasing with time
Flow('vmig','viking','math output="1.5+0.5*x1" ')
Result('vmig',
       '''
       grey color=j mean=y barreverse=y title="Migration Velocity" 
       scalebar=y barlabel=Velocity barunit=km/s
       ''')

# Slice through the ensemble of migrations
Flow('slice','migt vmig','slice pick=${SOURCES[1]}')
Result('mig','slice',
       'grey title="Stolt Migration with Variable Velocity" ')

##############################################
# Zoom an interesting area (!!! MODIFY ME !!!)
##############################################
min1,max1=1.7,2.1
min2,max2=4,8

Flow('box.asc',None,
     '''
     echo %s n1=2 n2=5 data_format=ascii_float in=$TARGET
     ''' % ' '.join(map(str,(min1,min2,max1,min2,
                             max1,max2,min1,max2,min1,min2))))
Plot('box','box.asc',
     '''
     dd form=native type=complex | window | 
     graph transp=y yreverse=y min1=0 max1=4 min2=0 max2=26.7625 
     wanttitle=n plotfat=5 plotcol=6 wantaxis=n
     ''')
Result('box','viking box','Overlay')
    
for i in range (3):
    case=('viking','mig2','slice')[i]
    zoom = case + '-zoom'
    Flow(zoom,case,
         '''
         window min1=%g max1=%g min2=%g max2=%g
         ''' % (min1,max1,min2,max2))
    Plot(zoom,'grey title=%s grid=y gridcol=5' % ('abc'[i]))
Result('zoom','viking-zoom mig2-zoom slice-zoom','SideBySideIso')

# Try to improve migration velocity
migs = []
for perc in range(-10,11):
    vmig = 'vmig%d' % perc
    Flow(vmig,'vmig','scale dscale=%g' % (1+perc*0.01))
    mig = 'slice%d' % perc
    Flow(mig,['migt',vmig],'slice pick=${SOURCES[1]}')
    migs.append(mig)
Flow('migs',migs,
     '''
     cat axis=3 ${SOURCES[1:%d]} | 
     put o3=-10 d3=1 label3="Percent Change" 
     ''' % len(migs))

#################################
# !!! UNCOMMENT THE NEXT LINE !!!
#################################
#Flow('picks.txt','migs','ipick')

Flow('picks','picks.txt',
     '''
     echo in=$SOURCE data_format=ascii_float n1=3 n2=20 | 
     dd form=native
     ''',stdin=0)
Flow('picks2','picks','window n1=2')

# Display pick locations
Plot('picks2',
     '''
     dd type=complex | 
     graph symbol=+ symbolsz=8 transp=y yreverse=y 
     min1=0 max1=4 min2=0 max2=26.7625 
     wanttitle=n plotfat=5 plotcol=6 wantaxis=n
     ''')
Result('picks','viking picks2','Overlay')

# Convert to velocity
Flow('perc','picks picks2 viking',
     '''
     window f1=2 | add add=-10 | 
     nnshape coord=${SOURCES[1]} pattern=${SOURCES[2]} 
     rect1=100 rect2=100
     ''')
Flow('vmigp','vmig perc',
     'math p=${SOURCES[1]} output="input*(1+0.01*p)" ')
Result('vmigp',
       '''
       grey color=j mean=y barreverse=y 
       title="Updated Migration Velocity" 
       scalebar=y barlabel=Velocity barunit=km/s
       ''')

# Slice through the ensemble of migrations
Flow('slicep','migt vmigp','slice pick=${SOURCES[1]}')
Result('migp','slicep',
       'grey title="Stolt Migration with Updated Velocity" ')

End()
